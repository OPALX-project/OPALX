# cmake/InstallOPALX.cmake
# -------------------------------------------------------
# Installation logic for the OPALX library
# -------------------------------------------------------

set(OPALX_INSTALL_CMAKEDIR "${CMAKE_INSTALL_LIBDIR}/cmake/opalx"
    CACHE PATH "Directory for opalx CMake package files")

set(_opalx_install_excludes
    PATTERN
    "CMakeFiles"
    EXCLUDE
    PATTERN
    "CMakeLists.txt"
    EXCLUDE
    PATTERN
    "*.c"
    EXCLUDE
    PATTERN
    "*.cc"
    EXCLUDE
    PATTERN
    "*.cpp"
    EXCLUDE
    PATTERN
    "*.cu"
    EXCLUDE)

install(
  DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/
  DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/opalx
  FILES_MATCHING
  PATTERN "*.h"
  PATTERN "*.hpp"
  PATTERN "*.hh"
  PATTERN "*.H"
  PATTERN "*.cuh"
  PATTERN "*.tpp" ${_opalx_install_excludes})

install(FILES ${CMAKE_CURRENT_BINARY_DIR}/OPALXVersions.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})

# Install the actual library target
install(
  TARGETS opalx
  EXPORT OPALXTargets
  ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} # static libs, import libs
  LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} # shared libs
  RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} # executables (if any)
  INCLUDES
  DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})

# Export the CMake target for find_package()
install(EXPORT OPALXTargets FILE OPALXTargets.cmake NAMESPACE OPALX::
        DESTINATION ${OPALX_INSTALL_CMAKEDIR})

include(CMakePackageConfigHelpers)

write_basic_package_version_file("${CMAKE_CURRENT_BINARY_DIR}/OPALXConfigVersion.cmake"
                                 VERSION ${PROJECT_VERSION} COMPATIBILITY SameMajorVersion)

configure_package_config_file(
  "${PROJECT_SOURCE_DIR}/cmake/OPALXConfig.cmake.in" "${CMAKE_CURRENT_BINARY_DIR}/OPALXConfig.cmake"
  INSTALL_DESTINATION ${OPALX_INSTALL_CMAKEDIR})

install(FILES "${CMAKE_CURRENT_BINARY_DIR}/OPALXConfig.cmake"
              "${CMAKE_CURRENT_BINARY_DIR}/OPALXConfigVersion.cmake"
        DESTINATION ${OPALX_INSTALL_CMAKEDIR})

return()

# -------------------------------------------------------
# Installation logic for the OPALX library
# -------------------------------------------------------
include(CMakePackageConfigHelpers)

# -------------------------------------------------------
# Install public headers
install(FILES ${OPALX_SOURCE_DIR}/OPALX.h ${OPALX_SOURCE_DIR}/OPALXCore.h
              ${OPALX_BINARY_DIR}/OPALXVersions.h DESTINATION include)

# -------------------------------------------------------
# Install the actual library target
install(TARGETS opalx EXPORT OPALXTargets DESTINATION lib)

# Ensure extern dependencies (like HEFFTE) are exported correctly if they were built in-tree. This
# is necessary for Heffte because it does not use CMake's export target mechanism
if(TARGET Heffte)
  install(TARGETS Heffte EXPORT OPALXTargets DESTINATION lib)
endif()

# -------------------------------------------------------
# Export the CMake targets for find_package()
install(EXPORT OPALXTargets FILE OPALXTargets.cmake NAMESPACE OPALX:: DESTINATION lib/cmake/OPALX)

# -------------------------------------------------------
# Also export targets to the build directory to support uninstalled builds
export(EXPORT OPALXTargets FILE "${PROJECT_BINARY_DIR}/OPALXTargets.cmake" NAMESPACE Opalx::)

# -------------------------------------------------------
# generate a version file for the package (in the build tree)
write_basic_package_version_file("${PROJECT_BINARY_DIR}/OPALXConfigVersion.cmake"
                                 VERSION ${PROJECT_VERSION} COMPATIBILITY SameMajorVersion)

# -------------------------------------------------------
# generate a package config file (in the build tree)
configure_package_config_file(
  "${PROJECT_SOURCE_DIR}/cmake/OPALXConfig.cmake.in" "${PROJECT_BINARY_DIR}/OPALXConfig.cmake"
  INSTALL_DESTINATION lib/cmake/OPALX)

# -------------------------------------------------------
# install the generated version and package config files in the install tree
install(FILES "${PROJECT_BINARY_DIR}/OPALXConfig.cmake"
              "${PROJECT_BINARY_DIR}/OPALXConfigVersion.cmake" DESTINATION lib/cmake/OPALX)