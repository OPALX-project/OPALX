%!PS-Adobe-2.0
%%Title: RadialEigen-090618.ps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Jun 18 16:02:46 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -86 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1482 780 M
5276 0 V
1.000 UL
LTb
1482 780 M
63 0 V
5213 0 R
-63 0 V
stroke
1326 780 M
[ [(Helvetica) 260.0 0.0 true true 0 (-0.15)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1482 1438 M
5276 0 V
1.000 UL
LTb
1482 1438 M
63 0 V
5213 0 R
-63 0 V
stroke
1326 1438 M
[ [(Helvetica) 260.0 0.0 true true 0 (-0.1)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1482 2096 M
5276 0 V
1.000 UL
LTb
1482 2096 M
63 0 V
5213 0 R
-63 0 V
stroke
1326 2096 M
[ [(Helvetica) 260.0 0.0 true true 0 (-0.05)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1482 2754 M
5276 0 V
1.000 UL
LTb
1482 2754 M
63 0 V
5213 0 R
-63 0 V
stroke
1326 2754 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1482 3412 M
5276 0 V
1.000 UL
LTb
1482 3412 M
63 0 V
5213 0 R
-63 0 V
stroke
1326 3412 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.05)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1482 4070 M
2717 0 V
2403 0 R
156 0 V
1.000 UL
LTb
1482 4070 M
63 0 V
5213 0 R
-63 0 V
stroke
1326 4070 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.1)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1482 4728 M
5276 0 V
1.000 UL
LTb
1482 4728 M
63 0 V
5213 0 R
-63 0 V
stroke
1326 4728 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.15)]
] -86.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
2010 780 M
0 3948 V
1.000 UL
LTb
2010 780 M
0 63 V
0 3885 R
0 -63 V
stroke
2010 520 M
[ [(Helvetica) 260.0 0.0 true true 0 (-2)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3065 780 M
0 3948 V
1.000 UL
LTb
3065 780 M
0 63 V
0 3885 R
0 -63 V
stroke
3065 520 M
[ [(Helvetica) 260.0 0.0 true true 0 (-1)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4120 780 M
0 3948 V
1.000 UL
LTb
4120 780 M
0 63 V
0 3885 R
0 -63 V
stroke
4120 520 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5175 780 M
0 3105 V
0 780 R
0 63 V
1.000 UL
LTb
5175 780 M
0 63 V
0 3885 R
0 -63 V
stroke
5175 520 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 1)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6230 780 M
0 3105 V
0 780 R
0 63 V
1.000 UL
LTb
6230 780 M
0 63 V
0 3885 R
0 -63 V
stroke
6230 520 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 2)]
] -86.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1482 780 M
5276 0 V
0 3948 V
-5276 0 V
0 -3948 V
LTb
260 2754 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 260.0 0.0 true true 0 (p)]
[(Helvetica) 208.0 -78.0 true true 0 (x)]
[(Helvetica) 260.0 0.0 true true 0 ( [mrad])]
] -60.7 MCshow
grestore
LTb
4120 130 M
[ [(Helvetica) 260.0 0.0 true true 0 (x [mm])]
] -86.7 MCshow
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
5603 4535 M
[ [(Helvetica) 260.0 0.0 true true 0 (FIXPO)]
] -86.7 MRshow
LT0
6230 2754 Pls
4437 1504 Pls
2221 2293 Pls
3170 3846 Pls
5808 3609 Pls
5703 2004 Pls
3170 1609 Pls
2221 3109 Pls
4437 4031 Pls
6230 2886 Pls
4648 1530 Pls
2326 2175 Pls
2959 3767 Pls
5597 3715 Pls
5914 2109 Pls
3381 1556 Pls
2221 2965 Pls
4226 4031 Pls
6230 3017 Pls
4859 1583 Pls
2432 2057 Pls
2854 3688 Pls
5492 3794 Pls
6019 2228 Pls
3592 1517 Pls
2115 2833 Pls
4014 4017 Pls
6125 3149 Pls
5070 1635 Pls
2537 1938 Pls
2643 3583 Pls
5281 3859 Pls
6125 2359 Pls
3803 1491 Pls
2115 2701 Pls
3803 4004 Pls
6125 3280 Pls
5281 1714 Pls
2643 1846 Pls
2537 3478 Pls
5070 3925 Pls
6125 2478 Pls
4014 1477 Pls
2115 2557 Pls
3592 3965 Pls
6019 3399 Pls
5386 1793 Pls
2748 1754 Pls
2432 3359 Pls
4859 3978 Pls
6230 2622 Pls
4226 1477 Pls
2115 2425 Pls
3381 3912 Pls
5914 3504 Pls
5597 1885 Pls
2959 1675 Pls
2326 3241 Pls
4648 4004 Pls
6230 2754 Pls
4437 1504 Pls
2221 2293 Pls
3170 3846 Pls
5808 3609 Pls
5703 1991 Pls
3170 1609 Pls
2221 3109 Pls
4437 4031 Pls
6230 2886 Pls
4648 1530 Pls
2326 2175 Pls
2959 3767 Pls
5597 3702 Pls
5914 2109 Pls
3381 1556 Pls
2221 2978 Pls
4226 4031 Pls
6230 3017 Pls
4859 1583 Pls
2432 2057 Pls
2854 3688 Pls
5492 3794 Pls
6019 2228 Pls
3592 1517 Pls
2115 2833 Pls
4014 4031 Pls
6125 3149 Pls
5070 1635 Pls
2537 1951 Pls
2643 3583 Pls
5281 3859 Pls
6125 2346 Pls
3803 1491 Pls
2115 2701 Pls
3803 4004 Pls
6125 3267 Pls
5281 1714 Pls
2643 1846 Pls
2537 3478 Pls
5070 3925 Pls
6102 4535 Pls
1.000 UP
1.000 UL
LT1
LTb
5603 4275 M
[ [(Helvetica) 260.0 0.0 true true 0 (OPAL LF-2)]
] -86.7 MRshow
LT1
4448 1504 Crs
2227 2272 Crs
3151 3882 Crs
5731 3658 Crs
5789 2047 Crs
3228 1650 Crs
2201 3049 Crs
4359 3997 Crs
6223 2940 Crs
4762 1547 Crs
2352 2159 Crs
2887 3664 Crs
5502 3802 Crs
5969 2160 Crs
3523 1505 Crs
2136 2834 Crs
4039 3972 Crs
6166 3130 Crs
5061 1668 Crs
2523 1908 Crs
2654 3600 Crs
5242 3858 Crs
6104 2371 Crs
3834 1436 Crs
2120 2625 Crs
3721 3990 Crs
6060 3330 Crs
5340 1750 Crs
2733 1748 Crs
2458 3447 Crs
4955 3951 Crs
6193 2567 Crs
4153 1443 Crs
2153 2416 Crs
3416 3932 Crs
5908 3545 Crs
5590 1916 Crs
2977 1674 Crs
2304 3202 Crs
4650 3963 Crs
6232 2755 Crs
4473 1524 Crs
2235 2316 Crs
3129 3798 Crs
5714 3664 Crs
5805 2053 Crs
3251 1565 Crs
2194 2976 Crs
4333 4017 Crs
6221 2941 Crs
4787 1564 Crs
2365 2084 Crs
2867 3701 Crs
5482 3810 Crs
5982 2164 Crs
3548 1534 Crs
2132 2879 Crs
4012 3996 Crs
6159 3132 Crs
5085 1681 Crs
2538 1948 Crs
2637 3521 Crs
5219 3870 Crs
6113 2373 Crs
3860 1462 Crs
2120 2671 Crs
3696 4017 Crs
6049 3332 Crs
5361 1760 Crs
2751 1786 Crs
2444 3371 Crs
4931 3965 Crs
6198 2568 Crs
4179 1465 Crs
2158 2461 Crs
3391 3963 Crs
5893 3549 Crs
5609 1924 Crs
2998 1710 Crs
2293 3245 Crs
4624 3981 Crs
6233 2756 Crs
4499 1543 Crs
2244 2242 Crs
3106 3832 Crs
5696 3670 Crs
5821 2058 Crs
3274 1598 Crs
2187 3020 Crs
4307 4038 Crs
6217 2942 Crs
4811 1580 Crs
2377 2126 Crs
2847 3738 Crs
5462 3819 Crs
5993 2285 Crs
3572 1564 Crs
2130 2807 Crs
3986 4020 Crs
6102 4275 Crs
1.000 UP
1.000 UL
LT2
LTb
5603 4015 M
[ [(Helvetica) 260.0 0.0 true true 0 (OPAL RK-4)]
] -86.7 MRshow
LT2
4448 1505 Star
2227 2272 Star
3151 3883 Star
5731 3659 Star
5789 2049 Star
3228 1534 Star
2201 3051 Star
4359 3999 Star
6223 2943 Star
4762 1550 Star
2353 2044 Star
2887 3668 Star
5502 3806 Star
5969 2164 Star
3523 1509 Star
2136 2839 Star
4038 3977 Star
6166 3135 Star
5061 1674 Star
2523 1914 Star
2654 3606 Star
5242 3865 Star
6104 2378 Star
3834 1444 Star
2120 2633 Star
3721 3998 Star
6060 3338 Star
5340 1759 Star
2733 1757 Star
2458 3457 Star
4955 3960 Star
6193 2577 Star
4153 1453 Star
2153 2426 Star
3416 3943 Star
5908 3438 Star
5590 1928 Star
2977 1686 Star
2303 3214 Star
4650 3976 Star
6232 2768 Star
4473 1537 Star
2236 2212 Star
3129 3811 Star
5714 3678 Star
5805 2067 Star
3251 1580 Star
2194 2991 Star
4333 4033 Star
6220 2957 Star
4786 1580 Star
2365 2100 Star
2867 3718 Star
5482 3827 Star
5982 2181 Star
3547 1552 Star
2133 2780 Star
4012 4014 Star
6159 3150 Star
5085 1700 Star
2538 1968 Star
2637 3541 Star
5219 3889 Star
6113 2393 Star
3860 1483 Star
2120 2692 Star
3696 3920 Star
6049 3354 Star
5361 1782 Star
2751 1808 Star
2444 3394 Star
4930 3987 Star
6198 2591 Star
4179 1489 Star
2158 2484 Star
3392 3869 Star
5894 3455 Star
5608 1948 Star
2999 1617 Star
2293 3153 Star
4624 4006 Star
6233 2782 Star
4499 1570 Star
2244 2269 Star
3106 3858 Star
5696 3697 Star
5821 2085 Star
3274 1625 Star
2187 3048 Star
4306 4066 Star
6217 2971 Star
4811 1609 Star
2378 2038 Star
2847 3650 Star
5462 3730 Star
5994 2197 Star
3573 1476 Star
2130 2838 Star
3986 4051 Star
6102 4015 Star
1.000 UL
LTb
1482 780 M
5276 0 V
0 3948 V
-5276 0 V
0 -3948 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
